[{"E:\\react\\movies\\src\\index.js":"1","E:\\react\\movies\\src\\App.js":"2","E:\\react\\movies\\src\\reportWebVitals.js":"3","E:\\react\\movies\\src\\Components\\Navbar.js":"4","E:\\react\\movies\\src\\Components\\Banner.js":"5","E:\\react\\movies\\src\\Components\\getMovies.js":"6","E:\\react\\movies\\src\\Components\\Movies.js":"7","E:\\react\\movies\\src\\Components\\Favourite.js":"8"},{"size":492,"mtime":1666341327943,"results":"9","hashOfConfig":"10"},{"size":625,"mtime":1666600866116,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":531,"mtime":1670411147779,"results":"13","hashOfConfig":"10"},{"size":1006,"mtime":1670411854612,"results":"14","hashOfConfig":"10"},{"size":12135,"mtime":1666341663709,"results":"15","hashOfConfig":"10"},{"size":6178,"mtime":1670414782176,"results":"16","hashOfConfig":"10"},{"size":8137,"mtime":1666605622075,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1yvxige",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"21"},"E:\\react\\movies\\src\\index.js",[],[],[],"E:\\react\\movies\\src\\App.js",["45"],[],"import './App.css';\nimport Navbar from './Components/Navbar';\nimport Banner from './Components/Banner';\nimport Movies from './Components/Movies';\nimport Favourite from './Components/Favourite';\nimport {BrowserRouter as Router,Routes,Route, BrowserRouter} from 'react-router-dom';\nfunction App() {\n  return (\n    <Router>\n      <Navbar/>\n      <Banner/>\n      <Routes>\n        <Route path='/' element={<Movies/>}/>  \n        <Route path='/favourites' element={<Favourite/>}/>\n      </Routes>\n      {/* <Banner/> */}\n      {/* <Movies/> name=\"udai\" */}\n      {/* <Favourite/> */}\n    </Router>\n    \n  );\n}\n\nexport default App;\n","E:\\react\\movies\\src\\reportWebVitals.js",[],[],"E:\\react\\movies\\src\\Components\\Navbar.js",[],[],"E:\\react\\movies\\src\\Components\\Banner.js",[],[],"E:\\react\\movies\\src\\Components\\getMovies.js",[],[],"E:\\react\\movies\\src\\Components\\Movies.js",["46","47","48","49"],[],"E:\\react\\movies\\src\\Components\\Favourite.js",["50","51","52","53","54","55"],[],"import React, { Component } from 'react'\r\nimport { movies } from './getMovies'\r\n\r\n\r\nexport default class Favourite extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            genres:[],\r\n            currgen:'All Genres',\r\n            movies:[],\r\n            currText:'',\r\n            limit:5,\r\n            currPage:1\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let genreids = {28:'Action',12:'Adventure',16:'Animation',35:'Comedy',80:'Crime',99:'Documentary',18:'Drama',10751:'Family',14:'Fantasy',36:'History',\r\n                        27:'Horror',10402:'Music',9648:'Mystery',10749:'Romance',878:'Sci-Fi',10770:'TV',53:'Thriller',10752:'War',37:'Western'};\r\n        let data = JSON.parse(localStorage.getItem(\"movies-app\") || \"[]\")\r\n        let temp = []\r\n        data.forEach((movieObj)=>{\r\n            if(!temp.includes(genreids[movieObj.genre_ids[0]])){\r\n                temp.push(genreids[movieObj.genre_ids[0]]);\r\n            }\r\n         })\r\n         temp.unshift('All Genres');\r\n         this.setState({\r\n             genres:[...temp],\r\n             movies:[...data]\r\n         })\r\n    }\r\n    handleGenreChange=(genre)=>{\r\n        this.setState({\r\n            currgen:genre\r\n        })\r\n    }\r\n    sortPopularityDesc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objB.popularity-objA.popularity\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n    sortPopularityAsc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objA.popularity-objB.popularity\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n\r\n    sortRatingDesc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objB.vote_average-objA.vote_average\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n    sortRatingAsc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objA.vote_average-objB.vote_average\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n    handlePageChange=(page)=>{\r\n        this.setState({\r\n            currPage:page\r\n        })\r\n    }\r\n    handleDelete=(id)=>{\r\n        let newarr = [];\r\n        newarr = this.state.movies.filter((movieObj)=>movieObj.id!=id)\r\n        this.setState({\r\n            movies:[...newarr]\r\n        })\r\n        localStorage.setItem(\"movies-app\",JSON.stringify(newarr))\r\n    }\r\n    render() {\r\n        let genreids = {28:'Action',12:'Adventure',16:'Animation',35:'Comedy',80:'Crime',99:'Documentary',18:'Drama',10751:'Family',14:'Fantasy',36:'History',\r\n                        27:'Horror',10402:'Music',9648:'Mystery',10749:'Romance',878:'Sci-Fi',10770:'TV',53:'Thriller',10752:'War',37:'Western'};\r\n        \r\n        let filterarr = [];\r\n\r\n        if(this.state.currText===''){\r\n            filterarr=this.state.movies\r\n        }else{\r\n            filterarr=this.state.movies.filter((movieObj)=>{\r\n                let title = movieObj.original_title.toLowerCase();\r\n                return title.includes(this.state.currText.toLowerCase())\r\n            })\r\n        }\r\n\r\n        // if(this.state.currgen==\"All Genres\"){\r\n        //     filterarr = this.state.movies\r\n        // }\r\n        if(this.state.currgen!=\"All Genres\"){\r\n            filterarr = this.state.movies.filter((movieObj)=>genreids[movieObj.genre_ids[0]]==this.state.currgen)\r\n        }\r\n        let pages = Math.ceil(filterarr.length/this.state.limit);\r\n        let pagesarr = [];\r\n        for(let i=1;i<=pages;i++){\r\n            pagesarr.push(i);\r\n        }\r\n        let si = (this.state.currPage-1)*this.state.limit;\r\n        let ei = si+this.state.limit;\r\n        filterarr = filterarr.slice(si,ei);\r\n        return (\r\n            <div>\r\n                <>\r\n                    <div className=\"main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 col-sm-12\">\r\n                            <ul class=\"list-group favourites-genres\">\r\n                                {\r\n                                    this.state.genres.map((genre)=>(\r\n                                        this.state.currgen == genre ?\r\n                                        <li class=\"list-group-item\" style={{background:'#3f51b5',color:'white',fontWeight:'bold'}} >{genre}</li> :\r\n                                        <li class=\"list-group-item\" style={{background:'white',color:'#3f51b5'}} onClick={()=>this.handleGenreChange(genre)}>{genre}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"col-lg-9 favourites-table col-sm-12\">\r\n                                <div className=\"row\">\r\n                                    <input type=\"text\" className=\"input-group-text col\" placeholder=\"Search\" value={this.state.currText} onChange={(e)=>this.setState({currText:e.target.value})}/>\r\n                                    <input type=\"number\" className=\"input-group-text col\" placeholder=\"Rows Count\" value={this.state.limit} onChange={(e)=>this.setState({limit:e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th scope=\"col\">Title</th>\r\n                                        <th scope=\"col\">Genre</th>\r\n                                        <th scope=\"col\"><i class=\"fas fa-sort-up\" onClick={this.sortPopularityDesc}/>Popularity<i class=\"fas fa-sort-down\" onClick={this.sortPopularityAsc}></i></th>\r\n                                        <th scope=\"col\"><i class=\"fas fa-sort-up\" onClick={this.sortRatingDesc}></i>Rating<i class=\"fas fa-sort-down\" onClick={this.sortRatingAsc}></i></th>\r\n                                        <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            filterarr.map((movieObj)=>(\r\n                                                <tr>\r\n                                                    <td><img src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`} alt={movieObj.title} style={{width:'5rem'}}/> {movieObj.original_title}</td>\r\n                                                    <td>{genreids[movieObj.genre_ids[0]]}</td>\r\n                                                    <td>{movieObj.popularity}</td>\r\n                                                    <td>{movieObj.vote_average}</td>\r\n                                                    <td><button type=\"button\" class=\"btn btn-danger\" onClick={()=>this.handleDelete(movieObj.id)}>Delete</button></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <nav aria-label=\"Page navigation example\">\r\n                                    <ul class=\"pagination\">\r\n                                        {\r\n                                            pagesarr.map((page)=>(\r\n                                                <li class=\"page-item\"><a class=\"page-link\" onClick={()=>this.handlePageChange(page)}>{page}</a></li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"56","severity":1,"message":"57","line":6,"column":47,"nodeType":"58","messageId":"59","endLine":6,"endColumn":60},{"ruleId":"60","severity":1,"message":"61","line":117,"column":47,"nodeType":"62","endLine":117,"endColumn":138},{"ruleId":"60","severity":1,"message":"61","line":131,"column":53,"nodeType":"62","endLine":131,"endColumn":100},{"ruleId":"60","severity":1,"message":"61","line":134,"column":61,"nodeType":"62","endLine":134,"endColumn":120},{"ruleId":"60","severity":1,"message":"61","line":137,"column":53,"nodeType":"62","endLine":137,"endColumn":101},{"ruleId":"56","severity":1,"message":"63","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":82,"column":66,"nodeType":"66","messageId":"67","endLine":82,"endColumn":68},{"ruleId":"64","severity":1,"message":"65","line":106,"column":30,"nodeType":"66","messageId":"67","endLine":106,"endColumn":32},{"ruleId":"64","severity":1,"message":"68","line":107,"column":93,"nodeType":"66","messageId":"67","endLine":107,"endColumn":95},{"ruleId":"64","severity":1,"message":"68","line":126,"column":60,"nodeType":"66","messageId":"67","endLine":126,"endColumn":62},{"ruleId":"60","severity":1,"message":"61","line":168,"column":71,"nodeType":"62","endLine":168,"endColumn":134},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'movies' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]